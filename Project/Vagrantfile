# -*- mode: ruby -*-
# vim: set ft=ruby :
MACHINES = {
	:inetrouter => {
        :box_name => "generic/centos8s",
        :net => [
                   {ip: '192.168.57.1', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "int_net"},
                ]
  },
	:backup => {
        :box_name => "generic/centos8s",
        :net => [
                  {ip: '192.168.57.2', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "int_net"},
                ]
  },
	:monlog => {
        :box_name => "generic/centos8s",
        :net => [
                   {ip: '192.168.57.3', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "int_net"},
                ]
  },  
	:wordpress => {
        :box_name => "generic/centos8s",
        :net => [
                   {ip: '192.168.57.4', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "int_net"},
                ]
  },  
}

Vagrant.configure("2") do |config|

if Vagrant.has_plugin?("vagrant-vbguest")
  config.vbguest.auto_update = false
end

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s
        
        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
          sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
          systemctl restart sshd
          cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s

        when "inetrouter"

            box.vm.provider :virtualbox do |box|
             box.customize ["modifyvm", :id, "--cpus", "1"]
             box.customize ["modifyvm", :id, "--memory", "512"]
            end

            box.vm.network :forwarded_port, guest: 443, host: 4431
            box.vm.network :forwarded_port, guest: 8080, host: 8081

            box.vm.provision "ansible" do |ansible|
              ansible.playbook = 'playbook.yml'
              ansible.tags = 'inetrouter'
            end

	when "backup"

            box.vm.provider :virtualbox do |box|
              box.customize ["modifyvm", :id, "--cpus", "1"]
              box.customize ["modifyvm", :id, "--memory", "1024"]
            end

            box.vm.provision "ansible" do |ansible|
              ansible.playbook = 'playbook.yml'
              ansible.tags = 'backup'
            end

        when "monlog"
          
            box.vm.provider :virtualbox do |box|
              box.customize ["modifyvm", :id, "--cpus", "2"]
              box.customize ["modifyvm", :id, "--memory", "3072"]
            end

            box.vm.provision "ansible" do |ansible|
              ansible.playbook = 'playbook.yml'
              ansible.tags = 'monlog'
            end

        when "wordpress"
            box.vm.provider :virtualbox do |box|
             box.customize ["modifyvm", :id, "--cpus", "2"]
             box.customize ["modifyvm", :id, "--memory", "4096"]
            end

            box.vm.provision "ansible" do |ansible|
              ansible.playbook = 'playbook.yml'
              ansible.tags = 'wordpress'
            end

	end
		
      end

  end
 
end
