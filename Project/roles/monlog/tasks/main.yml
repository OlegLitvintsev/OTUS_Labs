---
# tasks for SELinux configuration -----------------------------------------------------------------------------------------

- name: Install python3-libsemanage
  dnf:
    name: python3-libsemanage
    state: present
  become: yes

- name: Enable php-fpm execmem ability
  ansible.posix.seboolean:
    name: httpd_execmem
    state: yes
    persistent: yes
  become: yes

- name: Enable nginx non-default root writable
  ansible.posix.seboolean:
    name: nis_enabled
    state: yes
    persistent: yes
  become: yes

- name: Copy SELinux policy module file
  copy:
    src: ../../../files/policy_monlog.pp
    dest: /root/policy_monlog.pp
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Install SELinux policy module
  shell: semodule -i /root/policy_monlog.pp
  become: yes

- name: Enable Zabbix Frontend traffic
  firewalld:
    port: 8080/tcp
    permanent: yes
    state: enabled
  become: yes

- name: Enable Zabbix traffic
  firewalld:
    port: 10050/tcp
    state: enabled
    permanent: yes
  become: yes

- name: Enable Zabbix traffic
  firewalld:
    port: 10051/tcp
    state: enabled
    permanent: yes
  become: yes

- name: Enable rsyslog udp traffic
  firewalld:
    port: 514/udp
    state: enabled
    permanent: yes
  become: yes

- name: Enable rsyslog tcp traffic
  firewalld:
    port: 514/tcp
    state: enabled
    permanent: yes
  become: yes

- name: Reload firewalld
  become: yes
  service:
    name: firewalld
    state: reloaded

# tasks for php install -----------------------------------------------------------------------------------------

- name: Install EPEL GPG key
  rpm_key:
    key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
    state: present
  become: yes

- name: Install REMI GPG key
  rpm_key:
    key: https://rpms.remirepo.net/RPM-GPG-KEY-remi2018
    state: present
  become: yes

- name: Install epel repo
  dnf:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"
    state: present
  become: yes

- name: Install remi repo
  dnf:
    name: "http://rpms.remirepo.net/enterprise/remi-release-8.rpm"
    state: present
  become: yes

- name: Installing php and extensions
  dnf:
    name:
      - "@php:remi-8.1"
      - php-fpm
    state: present
  become: yes

- name: Restart php-fpm
  become: yes
  service:
    name: php-fpm
    state: restarted

# tasks for nginx install -----------------------------------------------------------------------------------------

- name: Install nginx repo
  template: "src=../../../files/nginx.repo dest=/etc/yum.repos.d/nginx.repo owner=root group=root mode=0644"
  become: yes

- name: Install nginx
  yum:
    name: ['yum-utils', 'nginx']
    state: present
  become: yes

- name: Start nginx
  become: yes
  service:
    name: nginx
    state: started

- name: Create a /etc/ssl/private directory if it does not exist
  file:
    path: /etc/ssl/private
    state: directory
  become: yes

#- name: Update nginx confs for ZABBIX + PHP 1
#  template: "src=../templates/default-site.conf dest=/etc/nginx/conf.d/{{server_hostname}}.conf owner=apache group=apache mode=0644"
#  become: yes
- name: Update nginx confs for ZABBIX + PHP 2
  template: "src=../../../files/nginx-selfsigned.key dest=/etc/ssl/private/nginx-selfsigned.key owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for ZABBIX + PHP 3
  template: "src=../../../files/nginx-selfsigned.crt dest=/etc/ssl/certs/nginx-selfsigned.crt owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for ZABBIX + PHP 4
  template: "src=../../../files/dhparam.pem dest=/etc/ssl/certs/dhparam.pem owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for ZABBIX + PHP 5
  template: "src=../../../files/self-signed.conf dest=/etc/nginx/self-signed.conf owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for ZABBIX + PHP 6
  template: "src=../../../files/ssl-params.conf dest=/etc/nginx/ssl-params.conf owner=apache group=apache mode=0644"
  become: yes

- name: Remove default site spec
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  become: yes

- name: Restart nginx
  become: yes
  service:
    name: nginx
    state: restarted

# tasks for ZABBIX Server install -------------------------------------------------------------------------------------------

- name: Install Zabbix 6.2 repo
  become: true
  dnf:
    name: https://repo.zabbix.com/zabbix/6.2/rhel/8/x86_64/zabbix-release-6.2-1.el8.noarch.rpm
    disable_gpg_check: yes
    state: present

- name: DNF clean up
  become: true
  shell: dnf clean all

- name: Install Zabbix 6.2
  become: true
  dnf:
    name:
      - zabbix-server-mysql
      - zabbix-web-mysql
      - zabbix-nginx-conf
      - zabbix-sql-scripts
      - zabbix-selinux-policy
      - zabbix-agent
    disable_gpg_check: yes
    state: present

# tasks for MySQL install ----------------------------------------------------------------------------------------------------

- name: Install mysql
  become: true
  dnf:
    name: 'mysql-server'
    state: present

- name: Install PyMySQL
  become: true
  shell: pip3 install pymysql

- name: Copy .my.cnf file with root password credentials
  template: 
    src: ../templates/.my.cnf
    dest: /root/.my.cnf
    owner: root
    mode: '0600'
    force: no
  become: true

- name: Start the MySQL service
  become: yes
  service:
    name: mysqld
    state: started

- name: Set root user password
  become: true
  become_user: root
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    priv: "*.*:ALL,GRANT"
  with_items:
    - localhost

- name: Copy .my.cnf file with root password credentials
  become: true
  template: src=../templates/.my.cnf2 dest=/root/.my.cnf owner=root mode=0600

- name: Create mysql database
  become: true
  mysql_db:
    name: "{{ zabbix_db_name }}"
    encoding: 'utf8mb4'
    collation: 'utf8mb4_bin'
    state: present

- name: Create mysql user
  become: true
  mysql_user:
    name: "{{ zabbix_db_user }}"
    password: "{{ zabbix_db_password }}"
    priv: "*.*:ALL"

- name: Delete anonymous MySQL server user for $server_hostname
  become: true
  action: mysql_user user="" host="{{ server_hostname }}" state="absent"
  
- name: Delete anonymous MySQL server user for localhost
  become: true
  action: mysql_user user="" state="absent"

- name: Remove the MySQL test database
  become: true
  action: mysql_db db=test state=absent

# tasks for Zabbix DB install ----------------------------------------------------------------------------------------------------

- name: Copy log_bin.on file
  become: true
  template: src=roles/monlog/templates/log_bin.on dest=/root/log_bin_on.sql owner=root mode=0600

- name: Copy log_bin.off file
  become: true
  template: src=roles/monlog/templates/log_bin.off dest=/root/log_bin_off.sql owner=root mode=0600

- name: Set log_bin_trust_function_creators
  become: true
  mysql_db:
    name: "{{ zabbix_db_name }}"
    target: /root/log_bin_on.sql
    state: import

- name: Import Zabbix database dump
  become: true
  mysql_db:
    state: import
    name: "{{ zabbix_db_name }}"
    login_user: "{{ zabbix_db_user }}"
    login_password: "{{ zabbix_db_password }}"
    encoding: utf8mb4
    target: /usr/share/doc/zabbix-sql-scripts/mysql/server.sql.gz

- name: Clear log_bin_trust_function_creators
  become: true
  mysql_db:
    name: "{{ zabbix_db_name }}"
    target: /root/log_bin_off.sql
    state: import

- name: Copy zabbix.conf file
  become: true
  template: src=roles/monlog/templates/zabbix.conf dest=/etc/nginx/conf.d owner=root mode=0644

- name: Set Zabbix database password
  replace:
    path: /etc/zabbix/zabbix_server.conf
    regexp: '# DBPassword='
    replace: 'DBPassword={{ zabbix_db_password }}'
  become: yes

- name: Restart zabbix-server
  become: yes
  service:
    name: zabbix-server
    state: restarted

- name: Restart zabbix-agent
  become: yes
  service:
    name: zabbix-agent
    state: restarted

- name: Restart nginx
  become: yes
  service:
    name: nginx
    state: restarted

- name: Restart php-fpm
  become: yes
  service:
    name: php-fpm
    state: restarted


# tasks for Percona-XtraBackup install ----------------------------------------------------------------------------------------------------

- name: Install Percona-XtraBackup
  dnf:
    name: https://downloads.percona.com/downloads/Percona-XtraBackup-LATEST/Percona-XtraBackup-8.0.29-22/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.29-22.1.el8.x86_64.rpm
    disable_gpg_check: yes
    state: latest
  become: yes

# tasks for BorgBackup install ----------------------------------------------------------------------------------------------------

- name: Download BorgBackup
  uri:
    url: https://github.com/borgbackup/borg/releases/download/1.2.2/borg-linux64
    dest: /root/borg-linux64
    status_code: 200, 302, 304
    mode: 'u=rwx,g=rwx,o=rx'
  become: yes

# tasks for rsyslog server install ----------------------------------------------------------------------------------------------------

- name: Install rsyslog
  dnf:
    name: rsyslog
    state: present
  become: yes

- name: Copy rsyslog.conf file
  copy:
    src: roles/monlog/templates/rsyslog.conf
    dest: /etc/rsyslog.conf
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Start the rsyslog service
  become: yes
  service:
    name: rsyslog
    state: restarted
