---

- name: Temporary set SELinux to Permissive mode
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  become: true

# tasks for SELinux & firewalld configuration ------------------------------------------------------------------------------

- name: Install python3-libsemanage
  dnf:
    name: python3-libsemanage
    state: present
  become: yes

- name: Enable php-fpm execmem ability
  ansible.posix.seboolean:
    name: httpd_execmem
    state: yes
    persistent: yes
  become: yes

- name: Enable nginx non-default root writable
  ansible.posix.seboolean:
    name: nis_enabled
    state: yes
    persistent: yes
  become: yes

#- name: Copy SELinux policy module file
#  copy:
#    src: ../../../files/policy_wordpress.pp
#    dest: /root/policy_wordpress.pp
#    owner: root
#    group: root
#    mode: '0644'
#  become: yes

#- name: Install SELinux policy module
#  shell: semodule -i /root/policy_wordpress.pp
#  become: yes

- name: Enable HTTPS traffic
  firewalld:
    service: https
    permanent: yes
    state: enabled
  become: yes

- name: Enable Zabbix traffic
  firewalld:
    port: 10050/tcp
    state: enabled
    permanent: yes
  become: yes

- name: Enable Zabbix traffic
  firewalld:
    port: 10051/tcp
    state: enabled
    permanent: yes
  become: yes

- name: Reload firewalld
  become: yes
  service:
    name: firewalld
    state: reloaded

# tasks for MySQL install ------------------------------------------------------------------------------------------------

- name: Install mysql
  become: true
  yum:
    name: 'mysql-server'
    state: present

- name: Install PyMySQL
  become: true
  shell: pip3 install pymysql

- name: Copy .my.cnf file with root password credentials
  template:
    src: ../templates/.my.cnf
    dest: /root/.my.cnf
    owner: root
    mode: '0600'
    force: no
  become: true

- name: Start the MySQL service
  become: true
  action: service name=mysqld state=started

- name: Set root user password
  become: true
  become_user: root
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    priv: "*.*:ALL,GRANT"
  with_items:
    - 127.0.0.1

- name: Copy .my.cnf file with root password credentials
  become: true
  template: src=../templates/.my.cnf2 dest=/root/.my.cnf owner=root mode=0600

- name: Create mysql user
  become: true
  mysql_user:
    name: "{{ wp_db_user }}"
    password: "{{ wp_db_password }}"
    priv: "*.*:ALL"

- name: Create mysql database
  become: true
  mysql_db:
    name: "{{ wp_db_name }}"
    state: present

- name: Delete anonymous MySQL server user for $server_hostname
  become: true
  action: mysql_user user="" host="{{ server_hostname }}" state="absent"

- name: Delete anonymous MySQL server user for localhost
  become: true
  action: mysql_user user="" state="absent"

- name: Remove the MySQL test database
  become: true
  action: mysql_db db=test state=absent

# tasks for WordPress install ------------------------------------------------------------------------------------------------

- name: Create group apache
  group:
    name: apache
    state: present
  become: yes

- name: Create user apache
  user:
    name: apache
    state: present
    group: apache
  become: yes

- name: Create webroot for WordPress
  file:
    state: directory
    path: /srv/www/
    owner: apache
    group: apache
    mode: 0755
  become: yes

- name: Check if WordPress directory exists in /srv/www
  stat: path=/srv/www/{{server_hostname}}
  register: check_path

- name: Download WordPress
  get_url:
    url: https://ru.wordpress.org/wordpress-{{ wp_version }}-ru_RU.tar.gz
    dest: /tmp/wordpress-{{ wp_version }}.tar.gz
    checksum: "sha1:{{ wp_sha1sum }}"
  become: yes
  when: not check_path.stat.exists

- name: Extract WordPress
  unarchive:
    src: /tmp/wordpress-{{ wp_version }}.tar.gz
    dest: /tmp
    owner: apache
    group: apache
    copy: no
  become: yes
  when: not check_path.stat.exists

- name: Move WordPress install files
  command: mv /tmp/wordpress /srv/www/{{server_hostname}}
  become: yes
  when: not check_path.stat.exists

- name: Fetch random salts for WordPress config
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  become: no

- name: Add wp-config
  template: "src=wp-config.php dest=/srv/www/{{server_hostname}}/wp-config.php"
  become: yes

- name: Update WordPress config file
  lineinfile:
    dest: "/srv/www/{{server_hostname}}/wp-config.php"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{wp_db_name}}');"}
    - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{wp_db_user}}');"}
    - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{wp_db_password}}');"}
  become: yes

# tasks for php install -----------------------------------------------------------------------------------------------------

- name: Install EPEL GPG key
  rpm_key:
    key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
    state: present
  become: yes

- name: Install REMI GPG key
  rpm_key:
    key: https://rpms.remirepo.net/RPM-GPG-KEY-remi2018
    state: present
  become: yes

- name: Install epel repo
  dnf:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"
    state: present
  become: yes

- name: Install remi repo
  dnf:
    name: "http://rpms.remirepo.net/enterprise/remi-release-8.rpm"
    state: present
  become: yes

- name: Installing php and extensions
  dnf:
    name:
      - "@php:remi-8.1"
      - php-mysqlnd
      - php-fpm
      - php-opcache
      - php-gd
      - php-xml
      - php-mbstring
      - php-json
      - php-zip
      - php-intl
      - php-imagick
    state: present
  become: yes

- name: Setup php-fpm
  replace: dest=/etc/php.ini regexp="(;cgi.fix_pathinfo=1)" replace="cgi.fix_pathinfo=0"
  become: yes

# tasks for rsyslog install ------------------------------------------------------------------------------------------------

- name: Install rsyslog
  dnf:
    name: rsyslog
    state: present
  become: yes

- name: Relay syslog critical & error messages to monlog server
  template: "src=../templates/crit.conf dest=/etc/rsyslog.d/crit.conf owner=root group=root mode=0644"
  become: yes

- name: Relay audit log messages to monlog server
  template: "src=../templates/audit.conf dest=/etc/rsyslog.d/audit.conf owner=root group=root mode=0644"
  become: yes

- name: Restart rsyslog
  become: yes
  service:
    name: rsyslog
    state: restarted

# tasks for nginx install ------------------------------------------------------------------------------------------------

- name: Install nginx repo
  template: "src=../../../files/nginx.repo dest=/etc/yum.repos.d/nginx.repo owner=root group=root mode=0644"
  become: yes

- name: Install nginx
  yum:
    name: ['yum-utils', 'nginx']
    state: present
  become: yes

- name: Change NGINX running user to apache
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: 'user  nginx;'
    line: 'user  apache;'
  become: yes

- name: Change nginx.conf file for rsyslog logging error log
  replace:
    path: /etc/nginx/nginx.conf
    regexp: 'error_log  /var/log/nginx/error.log notice;'
    replace: 'error_log /var/log/nginx/error.log notice;\nerror_log syslog:server=192.168.57.3;'
  become: yes

- name: Change nginx.conf file for rsyslog logging access log
  replace:
    path: /etc/nginx/nginx.conf
    regexp: 'access_log  /var/log/nginx/access.log  main;'
    replace: 'access_log  syslog:server=192.168.57.3 combined;'
  become: yes

- name: Start nginx
  become: yes
  service:
    name: nginx
    state: started

- name: Create a /etc/ssl/private directory if it does not exist
  file:
    path: /etc/ssl/private
    state: directory
  become: yes

- name: Update nginx confs for WordPress + PHP 1
  template: "src=../templates/default-site.conf dest=/etc/nginx/conf.d/{{server_hostname}}.conf owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for WordPress + PHP 2
  template: "src=../../../files/nginx-selfsigned.key dest=/etc/ssl/private/nginx-selfsigned.key owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for WordPress + PHP 3
  template: "src=../../../files/nginx-selfsigned.crt dest=/etc/ssl/certs/nginx-selfsigned.crt owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for WordPress + PHP 4
  template: "src=../../../files/dhparam.pem dest=/etc/ssl/certs/dhparam.pem owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for WordPress + PHP 5
  template: "src=../../../files/self-signed.conf dest=/etc/nginx/self-signed.conf owner=apache group=apache mode=0644"
  become: yes
- name: Update nginx confs for WordPress + PHP 6
  template: "src=../../../files/ssl-params.conf dest=/etc/nginx/ssl-params.conf owner=apache group=apache mode=0644"
  become: yes

- name: Remove default site spec
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  become: yes

- name: Restart nginx
  become: yes
  service:
    name: nginx
    state: restarted

# tasks for Percona-XtraBackup install ------------------------------------------------------------------------------------------------

- name: Install Percona-XtraBackup
  dnf:
    name: https://downloads.percona.com/downloads/Percona-XtraBackup-LATEST/Percona-XtraBackup-8.0.29-22/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.29-22.1.el8.x86_64.rpm
    disable_gpg_check: yes
    state: latest
  become: yes

# tasks for BorgBackup install ------------------------------------------------------------------------------------------------

- name: Download BorgBackup
  uri:
    url: https://github.com/borgbackup/borg/releases/download/1.2.2/borg-linux64
    dest: /root/borg-linux64
    status_code: 200, 304
    mode: 'u=rwx,g=rwx,o=rx'
  become: yes
  when: not check_path.stat.exists 

# tasks for Zabbix agent install ------------------------------------------------------------------------------------------------

- name: Install Zabbix 6.2 repo
  dnf:
    name: https://repo.zabbix.com/zabbix/6.2/rhel/8/x86_64/zabbix-release-6.2-1.el8.noarch.rpm
    disable_gpg_check: yes
    state: present
  become: yes

- name: DNF clean up
  become: true
  shell: dnf clean all

- name: Install Zabbix 6.2 agent
  dnf:
    name: zabbix-agent
    disable_gpg_check: yes
    state: latest
  become: yes

- name: Change Zabbix server
  replace:
    path: /etc/zabbix/zabbix_agentd.conf
    regexp: 'Server=127.0.0.1'
    replace: 'Server=192.168.57.3'
  become: yes

- name: Change Zabbix active server address
  replace:
    path: /etc/zabbix/zabbix_agentd.conf
    regexp: 'ServerActive=127.0.0.1'
    replace: 'ServerActive=192.168.57.3'
  become: yes

- name: Change Zabbix agent hostname
  replace:
    path: /etc/zabbix/zabbix_agentd.conf
    regexp: 'Hostname=Zabbix server'
    replace: 'Hostname=wordpress'
  become: yes

- name: Reload zabbix_agentd
  become: yes
  service:
    name: zabbix-agent
    state: restarted
